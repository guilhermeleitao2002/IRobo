<!-- -->
<launch>
  <!-- Arguments -->
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="map_file" default="$(find irobo)/data/map.yaml"/>
  <arg name="move_forward_only" default="false"/>

  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

  <!-- Turtlebot3 -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>

  <!-- ROSBAG -->
  <param name="/use_sim_time" value="true"/>
  <node pkg="rosbag" type="play" name="rosbag_player" args="--clock $(find irobo)/data/fixed_slam_easy.bag"/>

  <!-- ekf_localization_node -->
  <node pkg="robot_localization" type="ekf_localization_node" name="robot_localization_ekf_node_odom" clear_params="true">
    <!-- Comment out the frequency to ensure maximum available frequency -->
    <!-- <param name="frequency" value="10." /> -->
    <param name="sensor_timeout" value="0.2" />
    <param name="two_d_mode" value="true" />
    <param name="publish_tf" value="true" />
    <param name="map_frame" value="map" />
    <param name="odom_frame" value="odom" />
    <param name="base_link_frame" value="base_link" />
    <param name="world_frame" value="map" />

    <param name="odom0" value="odom" />
    x,y,z,
    roll,pitch,yaw,
    dot_x,dot_y,dot_z,
    dot_roll,dot_pitch,dot_yaw,
    ddot_x, ddot_y, ddot_z

    <rosparam param="odom0_config">
      [false, false, false,
       false, false, false,
       true, true, false,
       false, false, true,
       false, false, false]</rosparam>
    <param name="odom0_relative" value="false"/>
    <param name="imu0" value="imu" />
    <rosparam param="imu0_config">
      [false, false, false,
       false, false, true,
       false, false, false,
       false, false, false,
       false, false, false]</rosparam>
    <param name="imu0_relative" value="true"/>
    <rosparam param="process_noise_covariance">
      [0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0.01, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    </rosparam>
    <rosparam param="initial_estimate_covariance">
      [10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10]
    </rosparam>

    <rosparam param="initial_state">
       [0.0, 0.0, 0.0, <!--[-2.0, -0.5, 0.0,  -->
       0.0, 0.0, 0.0,
       0.0, 0.0, 0.0,
       0.0, 0.0, 0.0,
       0.0, 0.0, 0.0]</rosparam>
  </node>

  <!-- Add Hector Trajectory Server to visualize the path -->
  <!-- Trajectory for robot localization prediction -->
  <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="localization_trajectory_server">
    <param name="source_frame_name" value="base_scan" />
    <param name="target_frame_name" value="map" />
    <remap from="/trajectory" to="/trajectory_base_scan" />    
    <param name="trajectory_update_rate" value="30.0" />
    <param name="trajectory_publish_rate" value="30.0" />
  </node>
  <!-- Trajectory for ground truth data -->
  <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="ground_truth_trajectory_server">
    <param name="source_frame_name" value="mocap_laser_link" />
    <param name="target_frame_name" value="map" />
    <remap from="/trajectory" to="/trajectory_mocap_laser_link" />
    <param name="trajectory_update_rate" value="30.0" />
    <param name="trajectory_publish_rate" value="30.0" />
  </node>
    
  <!-- rviz -->
  <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find irobo)/rviz/turtlebot3_visualize_localization_sim.rviz" />

  <!-- static tf publisher for ground truth -->
  <node pkg="irobo" type="static_tf_publisher.py" name="tf2_mocap_to_odom" output="screen"/>

  <!-- run error script -->
  <node pkg="irobo" type="calculate_error.py" name="calculate_error" output="screen"/>

</launch>
